{"version":3,"sources":["components/NavBar/Navbar.js","components/Footer/Footer.js","components/ImageContainer/ImageContainer.js","components/Jumbotron/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["styles","background","backgroundColor","color","fontWeight","boxShadow","padding","links","correctmsg","fontSize","incorrectmsg","Navbar","react_default","a","createElement","style","className","href","this","props","message","score","top_score","Component","position","bottom","width","height","lineHeight","textAlign","Footer","container","marginBottom","image","margin","maxWidth","ImageContainer","nameArr","imageArr","brewery","map","elem","push","name","image_location","Fragment","onClick","click","src","alt","backgroundImage","backgroundSize","backgroundPosition","textShadow","Jumbotron","App","state","clicked","componentDidMount","_this","setState","shuffle","Brewery","handleClick","event","indexOf","target","getAttribute","clickedArr","currentScore","currentTopScore","NavBar_Navbar","components_Jumbotron_Jumbotron","components_ImageContainer_ImageContainer","components_Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de8366f7.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nconst styles = {\n  background: {\n    backgroundColor: '#40403a',\n    color:'white',\n    fontWeight :\"bold\",\n    boxShadow:\"0px 2px 20px #40403a\",\n    padding:'20px'\n  },\n  links: {\n    color:'white'\n  },\n  correctmsg:{\n    color:\"green\",\n    fontSize: \"20px\"\n  },\n  incorrectmsg:{\n    color:\"red\",\n    fontSize: \"25px\"\n  }\n\n}\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav style={styles.background} className=\"navbar nav-pills nav-justified sticky-top\">\n        <a style={styles.links} className=\"nav-item nav-link disabled\" href=\"/\">Clicky Brewery Game</a>\n        <a style={this.props.message ===\"Correct!\" ? styles.correctmsg : styles.incorrectmsg} className=\"nav-item nav-link disabled\" href=\"/\">{this.props.message}</a>\n        <a style={styles.links} className=\"nav-item nav-link disabled\" href=\"/\">Score: {this.props.score} | Top Score: {this.props.top_score}</a>\n      </nav>\n      \n    )\n  }\n}\n\nexport default Navbar\n","import React, { Component } from 'react';\n\n\nconst styles = {\n  position: \"absolute\",\n  bottom: 0,\n  width: '100%',\n  height: '80px',\n  lineHeight: '60px',\n  backgroundColor: '#40403a',\n  textAlign:'center',\n  color:'white',\n  fontWeight:'bold',\n  boxShadow: \"0px 2px 20px #40403a\",\n}\n\nclass Footer extends Component {\n\n  render() {\n    return (\n      <footer style={styles} className=\"footer\">\n        <div className=\"container\">\n          <p>Clicky Game!</p>\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer","import React, { Component } from 'react';\nimport './styles.css'\n\nconst styles = {\n    container: {\n        padding: '10px',\n        textAlign: 'center',\n        marginBottom: '70px',\n        backgroundColor: \"lightgray\"\n    },\n    image: {\n        margin: '10px',\n        padding: \"5px\",\n        maxWidth: '100%',\n        boxShadow: '0 0 0 2px hsl(0, 0%, 70%), 0 0 0 4px hsl(0, 0%, 80%)'\n    }\n}\n\nclass ImageContainer extends Component {\n\n    render() {\n        \n        let nameArr=[]\n        let imageArr =[]\n        this.props.brewery.map(elem => {\n            nameArr.push(elem.name)\n            imageArr.push(elem.image_location)\n        })\n\n        return (\n            <>\n                <div style={styles.container} className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click} style={styles.image} src={imageArr[0]}  width=\"auto\" alt={nameArr[0]} />\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click} style={styles.image} src={imageArr[1]} alt={nameArr[1]} />\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click}  style={styles.image} src={imageArr[2]} alt={nameArr[2]} />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click}  style={styles.image} src={imageArr[3]} alt={nameArr[3]} />\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click} style={styles.image} src={imageArr[4]} alt={nameArr[4]} />\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click}  style={styles.image} src={imageArr[5]} alt={nameArr[5]} />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click}  style={styles.image} src={imageArr[6]} alt={nameArr[6]} />\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click} style={styles.image} src={imageArr[7]} alt={nameArr[7]} />\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <img onClick={this.props.click}  style={styles.image} src={imageArr[8]} alt={nameArr[8]} />\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default ImageContainer","import React, { Component } from 'react';\n\nconst styles = {\n  background:{\n    backgroundImage:'url(\"https://cdn.vox-cdn.com/thumbor/l9NWfCGYQG1wfp-NWxbQujeuZU8=/135x0:1992x1393/1200x675/filters:focal(135x0:1992x1393)/cdn.vox-cdn.com/uploads/chorus_image/image/49465573/shutterstock_177912356.0.0.jpg\")',\n    backgroundSize:\"cover\",\n    backgroundPosition:\"center\",\n    color:'white',\n    fontWeight:\"bolder\",\n    textShadow:'black 0.3em 0.3em 0.5em'\n  }\n}\n\nclass Jumbotron extends Component {\n\n  render() {\n    return (\n      <div style={styles.background} className=\"jumbotron jumbotron-fluid text-center\">\n        <div className=\"container\">\n          <h1 className=\"display-3\">Clicky Game!</h1>\n          <h5 className=\"display-5\">Click on an image to earn points, but don't click on any more than once!</h5>\n        </div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default Jumbotron;","import React, { Component } from 'react';\nimport Navbar from './components/NavBar'\nimport Footer from './components/Footer'\nimport ImageContainer from './components/ImageContainer'\nimport Jumbotron from './components/Jumbotron'\nimport shuffle from 'shuffle-array'\nimport Brewery from './components/ImageContainer/brewery.json'\n\nclass App extends Component {\n\n  state = {\n    score: 0,\n    top_score: 0,\n    brewery: [],\n    clicked: [],\n    message:''\n  }\n\n  componentDidMount = () => {\n    this.setState({ brewery: shuffle(Brewery) })\n  }\n\n  handleClick = event => {\n    if (this.state.clicked.indexOf(event.target.getAttribute('alt')) !== -1) {\n      this.setState({ brewery: shuffle(Brewery), clicked: [], score : 0, message:\"You Lose\"})\n    } else {\n      let clickedArr = this.state.clicked\n      let currentScore = this.state.score +1\n      let currentTopScore = this.state.top_score\n      if(currentScore >= currentTopScore){\n        currentTopScore = currentScore\n      }\n\n      clickedArr.push(event.target.getAttribute('alt'))\n      this.setState({ brewery: shuffle(Brewery), score: currentScore, top_score: currentTopScore, message: \"Correct!\"})\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar score={this.state.score} top_score={this.state.top_score} message={this.state.message}/>\n        <Jumbotron />\n        <ImageContainer brewery={this.state.brewery} click={this.handleClick} />\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}